<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.03 [fr] (Win95; I) [Netscape]">
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0000EF" VLINK="#55188A" ALINK="#FF0000">

<CENTER><B><FONT SIZE=+3>Les transformations géométriques</FONT></B></CENTER>
 

<P><FONT SIZE=+1>La programmation en 3D est rarement limitée à
des objets immobiles, en particulier dans le domaine des démos.
Tout mouvement peut se décomposer en une translation et une rotation,
et dans le cas échéant on peut inclure le changement d'échelle.
Les objets subissent donc un certain nombre de transformations géométriques,
afin de donner une illusion de mouvement. Ces transformations ne sont pas
très compliquées d'un point de vue mathématiques,
et elles sont de plus en plus câblées sur de nombreux processeurs
(par exemple sur les Silicon Graphics) mais il est tout de même bon
de les présenter clairement, car vous serez très certainement
amené à les programmer.</FONT>

<P><B><U><FONT SIZE=+2>1/ La translation</FONT></U></B>

<P><FONT SIZE=+1>On appelle translation un déplacement simple dans
une direction fixe. Elle est matérialisée par une addition
vectorielle, tout simplement. Par exemple, pour déplacer un point
<B>P(x,y) </B>de <B><I>dx </I></B>unités selon l'axe des x et de
<B><I>dy </I></B>unités par rapport à l'axe des y il suffit
de faire :</FONT>
<CENTER><B><FONT SIZE=+1>x' = x + dx</FONT></B></CENTER>

<CENTER><B><FONT SIZE=+1>y' = y + dy</FONT></B></CENTER>


<P><FONT SIZE=+1>Le point <B>P'(x',y')</B> sera donc le point obtenu par
la translation de vecteur <B>T(dx,dy)</B>. En 3D, il suffit d'ajouter une
dimension : le fonctionnement est strictement identique. En résumé,
la translation peut s'écrire sous la forme :</FONT>
<CENTER><B><FONT SIZE=+1>P' = P + T</FONT></B></CENTER>


<P><FONT SIZE=+1>Pour déplacer un objet par une translation, il
suffit d'appliquer la même transformation à tous ses points.</FONT>

<P><B><U><FONT SIZE=+2>2/ Le changement d'échelle</FONT></U></B>

<P><FONT SIZE=+1>On peut effectuer aussi facilement un changement d'échelle
sur un objet, ce qui permet de le "grossir" ou au contraire de le "rétrécir".
Dans ce cas, il faut faire une multiplication de la forme :</FONT>
<CENTER><B><FONT SIZE=+1>x' = sx * x</FONT></B></CENTER>

<CENTER><B><FONT SIZE=+1>y' = sy * y</FONT></B></CENTER>


<P><FONT SIZE=+1>Le point <B>P'(x',y')</B> sera le point obtenu par la
multiplication du point <B>P</B> et de la matrice <B>S(sx,sy)</B>. On écrira
donc <B>P'= S . P,</B> où S est une matrice du type :</FONT>
<CENTER><IMG SRC="echelle.gif" HEIGHT=50 WIDTH=100></CENTER>


<P><B><U><FONT SIZE=+2>3/ La rotation</FONT></U></B>

<P><FONT SIZE=+1>Contrairement aux idées reçues, les calculs
de rotations ne sont pas très compliqués, pour peu que l'on
ait des vagues souvenirs de trigonométrie et que l'on sache manipuler
les matrices.</FONT>

<P><FONT SIZE=+1>Plaçons-nous dans le plan avec l'exemple suivant
:</FONT>
<CENTER><IMG SRC="rotation.gif" ALT="rotation.gif" HEIGHT=200 WIDTH=320></CENTER>


<P><FONT SIZE=+1>Nous avons ici une rotation d'angle a autour de l'origine.</FONT>
<BR><FONT SIZE=+1>En supposant que les points A et B soient sur le cercle
trigonométrique (pour ceux qui aurait oublié : A(1,0) et
B(0,1)), nous avons clairement :</FONT>
<CENTER><B><FONT SIZE=+1>x<SUB>A' </SUB>=<SUB> </SUB>cos(a)  
</FONT></B><FONT SIZE=+1>et<B>   x<SUB>B' </SUB>= -sin(a)</B></FONT></CENTER>

<CENTER><B><FONT SIZE=+1>y<SUB>A' </SUB>= sin(a)   </FONT></B><FONT SIZE=+1>et   <B>
y<SUB>B' </SUB>=  cos(a)</B></FONT></CENTER>


<P><FONT SIZE=+1>Cette opération n'est autre qu'un calcul matriciel,
et vous devez certainement savoir comment l'effectuer. La rotation matrice
de la <B>rotation R</B> d'angle <B>a</B> est donc :</FONT>
<CENTER><IMG SRC="matrice2d.gif" HEIGHT=100 WIDTH=170></CENTER>


<P><FONT SIZE=+1>On peut maintenant généraliser le problème
à tous les points du plan en utilisant cette matrice R. La rotation
d'un point P autour de l'origine devient alors :</FONT>
<UL>
<CENTER><B><FONT SIZE=+1>x'  =  x.cos(a)  -  y.sin(a)</FONT></B></CENTER>

<CENTER><B><FONT SIZE=+1>y'  =  x.sin(a)  +  y.cos(a)</FONT></B></CENTER>
</UL>
<FONT SIZE=+1>Pour passer en 3D, rien de plus facile : il suffit d'ajouter
une dimension à notre matrice. Dans une rotation, il est important
de distinguer les axes concernés ; aussi nous allons voir la matrice
associée à la rotation autour de chaque axe. Commençons
par la rotation autour de l'axe des X : il est clair que nous pouvons déduire
la matrice à partir de celle que nous venons de voir. Il suffit
pour cela d'observer que la rotation autour de l'axe des X ne modifiera
pas les composantes X des coordonnées du point considéré
(où de l'objet).</FONT>

<P><FONT SIZE=+1>Voici l'allure qu'auront nos matrices pour une rotation
respectivement autour des des axes X,Y et Z :</FONT>
<BR> 
<CENTER><TABLE CELLSPACING=0 CELLPADDING=10 >
<TR>
<TD><IMG SRC="matrice3dx.gif" HEIGHT=150 WIDTH=200></TD>

<TD><B><FONT SIZE=+1>x' = x</FONT></B> 

<P><B><FONT SIZE=+1>y' = y*cos(a) - z*sin(a)</FONT></B> 

<P><B><FONT SIZE=+1>z' = y*sin(a) + z*cos(a)</FONT></B></TD>
</TR>

<TR>
<TD><IMG SRC="matrice3dy.gif" HEIGHT=150 WIDTH=200></TD>

<TD><B><FONT SIZE=+1>x' = x*cos(a) + z*sin(a)</FONT></B> 

<P><B><FONT SIZE=+1>y' = y</FONT></B> 

<P><B><FONT SIZE=+1>z' = -x*sin(a) + z*cos(a)</FONT></B></TD>
</TR>

<TR>
<TD><IMG SRC="matrice3dz.gif" HEIGHT=150 WIDTH=200></TD>

<TD><B><FONT SIZE=+1>x' = x*cos(a) + y*sin(a)</FONT></B> 

<P><B><FONT SIZE=+1>y' = -x*sin(a) + y*cos(a)</FONT></B> 

<P><B><FONT SIZE=+1>z' = z</FONT></B></TD>
</TR>
</TABLE></CENTER>
<FONT SIZE=+1>Voilà pour nos rotations. Mais, me direz-vous, pourquoi
se promener avec 3 matrices, et non pas une seule ? En fait, le problème
est un petit peu plus compliqué que ça, et l'on en reparlera
un peu plus tard lorsque nous verrons les matrices homogènes. On
peut en effet n'avoir qu'une seule matrice : il suffit de les combiner
entre elles. Il s'agit encore une fois d'un simple produit matriciel, mais
je ne vous donnerez pas la formule, elle est trop longue pour tenir sur
une seule ligne :o) Si vous etes courageux je vous laisse le soin de la
trouver.</FONT>

<P><FONT SIZE=+1>A ce niveau, vous pouvez déjà réaliser
toutes les animations que vous voulez, puisque nous avons abordé
toutes les bases mathématiques nécessaires. Mais il nous
reste encore un problème à résoudre : comment afficher
une objet représenté en 3D sur un petit écran tout
plat qui ne compte lui que 2 dimensions ? Rassurez-vous, la solution est
relativement simple, et si vous avez suivit jusque-là cela ne vous
causera en principe pas de problème particulier.</FONT>

<P><B><U><FONT SIZE=+2>4/ La projection</FONT></U></B>

<P><FONT SIZE=+1>Pour passer d'une dimension 3 à une dimension 2,
il faut projeter les coordonnées des sommets qui composent la scène
à visualiser. Il existe plusieurs types de projection : la <I>projection
parallèle</I> et la <I>projection perspective.</I> La première
est utilisée en architecture, alors que le seconde est utilisée
pour le rendu réaliste, car elle rend compte des distances et donne
véritablement une impression de profondeur à la scène.
C'est celle que nous avons vue dans le chapitre précédent,
et que nous allons utiliser par la suite.</FONT>

<P><FONT SIZE=+1>Dans ce cas de figure, le principe consiste à projeter
les points sur un plan situé devant le point d'observation. Reprenons
notre petit schéma :</FONT>
<CENTER><IMG SRC="perspec.gif" HEIGHT=200 WIDTH=320></CENTER>


<P><FONT SIZE=+1>Vous constatez qu'il est simple de calculer la valeur
de Y'. Il en est de même pour X'. Il s'agit ici d'une formule simplifiée
pour nos besoins, et qui va s'avérer très rapide est efficace,
mais qui risque de nous limiter. Donc si jamais vous avez besoin un jour
d'un vrai formules de projection perspective, vous avez de la chance les
voici :</FONT>
<CENTER><B><FONT SIZE=+1>X' = Xo + Zo * (X-Xo) / (Zo-Z)</FONT></B></CENTER>

<CENTER><B><FONT SIZE=+1>Y' = Yo + Zo * (Y-Yo) / (Zo-Z)</FONT></B></CENTER>


<P><FONT SIZE=+1>Ces formules tiennent compte de la position de l'observateur,
qui est situé au point <B>O(Xo,Yo,Zo)</B>. En supposant que l'on
ait Xo=Yo=0, on a l'oeil qui est situé quelque par sur l'axe des
Z, et l'on retombe sur les formules précédentes. C'est une
petite optimisation qui simplifie la vie des débutants, mais qui
n'est pas valable dans le cas général.</FONT>

<P><FONT SIZE=+1>Comme vous l'avez certainement constaté, le dessin
en 2D n'est pas réellement mon domaine de prédilection. Je
ne vais donc pas vous faire de petit dessin pour illustrer mes formules,
d'autant qu'elles sont compréhensibles.</FONT>

<P><B><U><FONT SIZE=+2>5/ Les coordonnées homogènes</FONT></U></B>

<P><FONT SIZE=+1>Les coordonnées homogènes sont utilisées
en synthèse d'image afin d'unifier le traitement des transformations
géométriques d'une scène et de les regrouper dans
une seule matrice. En effet, si l'on utilise une matrice 2*2 pour les scènes
bidimensionnelles et une matrice 3*3 pour les scènes tridimensionnelles,
ces matrices ne peuvent exprimer que des rotations.</FONT>

<P><FONT SIZE=+1>Pour exprimer aussi les translations, les changements
d'échelle et les projections, on va utiliser des matrices 4*4 pour
les scènes tridimensionnelles.</FONT>

<P><FONT SIZE=+1>Ainsi, si (x,y,z) sont les coordonnées d'un point
de la scène à transformer et M<SUB>H</SUB> la matrice 4*4
de coordonnées homogènes, on effectuera la multiplication
:</FONT>
<CENTER><B><FONT SIZE=+1>M<SUB>H</SUB> * [ x y z 1 ]</FONT></B></CENTER>


<P><FONT SIZE=+1>ce qui donnera comme résultat [ X Y Z H ].</FONT>

<P><FONT SIZE=+1>Les coordonnées du point transformé seront
alors (X/H , Y/H , Z/H).</FONT>

<P><FONT SIZE=+1>La matrice 4*4 des coordonnées homogènes
peut être considérée comme étant composée
de 4 sous-matrices, chacune d'elle étant associée à
un type de transformation.</FONT>
<CENTER><IMG SRC="homogene.gif" HEIGHT=250 WIDTH=400></CENTER>


<P>
<HR WIDTH="100%">

<P><FONT SIZE=+1><A HREF="Plan3D.html">[Sommaire]</A> <A HREF="chap2.html">[Précédent]</A>
<A HREF="chap4.html">[Suivant]</A> <A HREF="../accueil.html" TARGET="Contenu">[Home
Page]</A></FONT>

<P><FONT SIZE=+1>Page réalisée par <A HREF="../cv.html" TARGET="Contenu">Christophe
Heulin.</A></FONT>
<BR><FONT SIZE=+1>Renseignements, critiques, informations : <A HREF="mailto:heulin@multimania.com">heulin@multimania.com</A></FONT>
<BR> 
</BODY>
</HTML>
