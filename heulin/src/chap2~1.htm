<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.03 [fr] (Win95; I) [Netscape]">
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0000EF" VLINK="#000080" ALINK="#FF0000">

<CENTER>
<H1>
<FONT COLOR="#000000">Représentation d'un objet en 3D</FONT></H1></CENTER>
 

<P><B><U><FONT SIZE=+2>1/ Le monde en 3 dimensions</FONT></U></B>

<P><FONT SIZE=+1>Modéliser un objet de la réalité
revient a considérer ses coordonnées spatiales. Aussi, dessiner
un objet en 3D peut ne pas paraître simple au premier abord. Selon
le problème, les structures utilisées peuvent différer.
Nous allons donc nous limiter à une seule représentation,
la plus intuitive et très certainement la plus simple à mettre
en oeuvre, qui est une représentation hiérarchique.</FONT>

<P><FONT SIZE=+1>Nous allons travailler dans le repère cartésien
(O,X,Y,Z) qui sera notre espace image. Un objet 3D est caractérisé
par sa forme et sa position. La forme d'un objet est définie par
un ensemble de facettes planes, et une face est logiquement définie
par les coordonnées de ses sommets. En général, les
coordonnées sont exprimées par rapport au centre de l'objet.
Ce centre est utilisé comme centre de rotation de l'objet.</FONT>

<P><FONT SIZE=+1>Ainsi, la position d'un objet dans notre espace image
est définie d'une part par les coordonnées de son centre,
et d'autre part par son orientation dans l'espace. Ceci nous mène
donc naturellement à utiliser un vecteur de translation (Xoff,Yoff,Zoff)
et trois angles de rotation distincts (un pour chaque axe).</FONT>

<P><FONT SIZE=+1>Pour déterminer la position d'un objet, nous devons
connaître les coordonnées de chacun des sommets qui composent
ses faces. En pratique, un même sommet est commun à plusieurs
faces. C'est pourquoi, afin de ne pas recalculer plusieurs fois les mêmes
coordonnées, nous ne travaillons qu'avec des points. Au lieu d'avoir
une liste de coordonnées (x,y,z) pour représenter nos faces,
nous n'aurons qu'une simple liste de numéros référençant
les points de l'objet.</FONT>

<P><B><U><FONT SIZE=+2>2/ Un exemple simple</FONT></U></B>

<P><FONT SIZE=+1>Avant d'aller plus loin, prenons un des objets le plus
élémentaire en 3D : le Cube. Pour un cube de coté
200 centré sur l'origine, nous pouvons définir ses sommets
de la manière suivante :</FONT>
<BR> 
<CENTER><TABLE BORDER=2 CELLSPACING=0 CELLPADDING=0 >
<TR ALIGN=CENTER VALIGN=CENTER>
<TD>
<CENTER><B><FONT SIZE=+1>Point #</FONT></B></CENTER>
</TD>

<TD>
<CENTER><B><FONT SIZE=+1>X </FONT></B></CENTER>
</TD>

<TD>
<CENTER><B><FONT SIZE=+1>Y </FONT></B></CENTER>
</TD>

<TD>
<CENTER><B><FONT SIZE=+1>Z</FONT></B></CENTER>
</TD>
</TR>

<TR>
<TD>
<CENTER><FONT SIZE=+1>0</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>-100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>-100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>-100</FONT></CENTER>
</TD>
</TR>

<TR>
<TD>
<CENTER><FONT SIZE=+1>1</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>-100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>-100</FONT></CENTER>
</TD>
</TR>

<TR>
<TD>
<CENTER><FONT SIZE=+1>2</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>-100</FONT></CENTER>
</TD>
</TR>

<TR>
<TD>
<CENTER><FONT SIZE=+1>3</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>-100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>-100</FONT></CENTER>
</TD>
</TR>

<TR>
<TD>
<CENTER><FONT SIZE=+1>4</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>-100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>100</FONT></CENTER>
</TD>
</TR>

<TR>
<TD>
<CENTER><FONT SIZE=+1>5</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>-100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>-100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>100</FONT></CENTER>
</TD>
</TR>

<TR>
<TD>
<CENTER><FONT SIZE=+1>6</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>-100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>100</FONT></CENTER>
</TD>
</TR>

<TR ALIGN=CENTER VALIGN=CENTER>
<TD>
<CENTER><FONT SIZE=+1>7</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>100</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>100</FONT></CENTER>
</TD>

<TD ALIGN=CENTER VALIGN=CENTER>
<CENTER><FONT SIZE=+1>100</FONT></CENTER>
</TD>
</TR>
</TABLE></CENTER>
<FONT SIZE=+1>Pour les faces, nous pouvons utiliser la structure suivante
:</FONT>
<BR> 
<CENTER><TABLE BORDER CELLSPACING=0 CELLPADDING=0 >
<TR>
<TD><B><FONT SIZE=+1>Nb de sommets</FONT></B></TD>

<TD><B><FONT SIZE=+1>Liste des points</FONT></B></TD>
</TR>

<TR>
<TD>
<CENTER><FONT SIZE=+1>4</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>0,1,2,3</FONT></CENTER>
</TD>
</TR>

<TR>
<TD>
<CENTER><FONT SIZE=+1>4</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>1,4,7,2</FONT></CENTER>
</TD>
</TR>

<TR>
<TD>
<CENTER><FONT SIZE=+1>4</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>4,5,6,7</FONT></CENTER>
</TD>
</TR>

<TR>
<TD>
<CENTER><FONT SIZE=+1>4</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>5,0,3,6</FONT></CENTER>
</TD>
</TR>

<TR>
<TD>
<CENTER><FONT SIZE=+1>4</FONT></CENTER>
</TD>

<TD>
<CENTER><FONT SIZE=+1>5,4,1,0</FONT></CENTER>
</TD>
</TR>

<TR ALIGN=CENTER VALIGN=CENTER>
<TD>
<CENTER><FONT SIZE=+1>4</FONT></CENTER>
</TD>

<TD VALIGN=CENTER>
<CENTER><FONT SIZE=+1>3,2,7,6</FONT></CENTER>
</TD>
</TR>
</TABLE></CENTER>
<FONT SIZE=+1>L'objet est définit comme ci-dessous :</FONT>
<CENTER><IMG SRC="cube.gif" ALT="le cube en 3D" HEIGHT=200 WIDTH=320 ALIGN=CENTER></CENTER>


<P><FONT SIZE=+1>Vous pouvez dès à présent remarquer
que les numéros des sommets sont donnés de manière
à décrire chaque face dans un sens précis. Dans notre
exemple, lorsqu'on regarde une face, ses sommets sont numérotés
dans le sens trigonométrique.</FONT>

<P><B><U><FONT SIZE=+2>3/ Un premier programme</FONT></U></B>

<P><FONT SIZE=+1>Bien. Tout cela est bien joli, mais en pratique qu'est-ce
que ça donne ? Voici un petit programme qui ouvre un écran
graphique et qui affiche un cube en perspective (<A HREF="cube1.zip">cube1.zip</A>).
Pour ce faire, nous utilisons une projection, qui est le seul moyen de
représenter un objet 3D en 2D. Le principe sera expliqué
dans le chapitre suivant.</FONT>

<P><FONT SIZE=+1>Avant toute chose, il faut définir les sommets
du cube. On peut réaliser cette opération de plusieurs manières,
soit statiquement, soit dynamiquement. La structure utilisée est
des plus simples :</FONT>
<PRE><FONT COLOR="#000000"><FONT SIZE=+1>typedef struct
{
  double x,y,z;
} Point;</FONT></FONT></PRE>
<FONT SIZE=+1>Pour les sommets, nous pouvons les définir de la manière
suivante :</FONT>
<PRE><FONT COLOR="#000000"><FONT SIZE=+1>Point cube1[8];</FONT></FONT></PRE>
<FONT SIZE=+1>puis faire appel à une fonction qui affectera une
valeur a chacun de points :</FONT>
<PRE><FONT SIZE=+1>void Initialiser(void)
{
  cube1[0].x = -100;  cube1[0].y = -100;  cube1[0].z = -100;
  cube1[1].x =  100;  cube1[1].y = -100;  cube1[1].z = -100;
  cube1[2].x =  100;  cube1[2].y =  100;  cube1[2].z = -100;
  cube1[3].x = -100;  cube1[3].y =  100;  cube1[3].z = -100;
  cube1[4].x =  100;  cube1[4].y = -100;  cube1[4].z =  100;
  cube1[5].x = -100;  cube1[5].y = -100;  cube1[5].z =  100;
  cube1[6].x = -100;  cube1[6].y =  100;  cube1[6].z =  100;
  cube1[7].x =  100;  cube1[7].y =  100;  cube1[7].z =  100;
}</FONT></PRE>
<FONT SIZE=+1>Nous pouvons également initialiser les valeurs de
chacune des coordonnées lors de la déclaration du vecteur
des sommets :</FONT>
<PRE><FONT SIZE=+1>Point cube2[8]= { -100,-100,-100,
                   100,-100,-100,
                   100, 100,-100,
                  -100, 100,-100,
                   100,-100, 100,
                  -100,-100, 100,
                  -100, 100, 100,
                   100, 100, 100 };</FONT></PRE>
<FONT SIZE=+1>Pour afficher tous les sommets de notre cube, nous devons
transformer leurs coordonnées 3D en coordonnées 2D, ce qui
revient à faire une projection. Le principe en est simple : il suffit
de diviser les valeurs X et Y de chaque point par la troisième valeur
Z.. Nous avons alors une <I>projection perspective. </I>Voici un petit
schéma simple qui va vous éclairer l'esprit sur ce principe
fondamental en 3D :</FONT>
<CENTER><IMG SRC="perspec.gif" HEIGHT=200 WIDTH=320></CENTER>


<P><FONT SIZE=+1>Vous constatez qu'il est simple de calculer la valeur
de Y'. Il en est de même pour X'. Si vous ne comprenez pas ce principe,
reprenez vos cours de math de 4ème, c'est au programme !</FONT>

<P><FONT SIZE=+1>En pratique, il est avantageux de choisir pour valeur
de <B><I>d </I></B>une puissance de 2 : cela permet de remplacer une multiplication
par un simple décalage arithmétique, beaucoup moins coûteux
en temps machine (même si cette tendance disparaît peu à
peu). Voici une procédure C qui affiche chacun des points du cube
en blanc :</FONT>
<PRE><FONT SIZE=+1>void Sommet1(void)
{
  int i;

  _setcolor(15);

  for (i=0;i&lt;8;i++)
  {
    _setpixel((cube1[i].x*256)/(cube1[i].z+Zoff)+Xoff,
              (cube1[i].y*256)/(cube1[i].z+Zoff)+Yoff);
  }
}</FONT></PRE>
<FONT SIZE=+1>Si vous utilisez un autre compilateur que le Watcom C, vous
devrez bien sur remplacer les instructions <I>_setcolor</I> et _<I>setpixel
</I>par les fonctions similaires disponibles, ou bien encore par votre
propres fonctions, comme nous le verrons plus tard.</FONT>

<P><FONT SIZE=+1>Une manière bien plus visuelle d'afficher notre
cube serait de le dessiner en fil de fer. Rien de plus simple : il suffit
de tracer les arêtes entre les sommets projetés sur le plan
de l'écran. En reprenant le schéma de notre cube, cela devient
un jeu d'enfant :</FONT>
<PRE><FONT SIZE=+1>void FilDeFer(void)
{
 _setcolor(15);

 /* On affiche la face avant */
 ligne(0,1); ligne(1,2); ligne(2,3); ligne(3,0);

 /* Puis la face arriere */
 ligne(4,5); ligne(5,6); ligne(6,7); ligne(7,4);

 /* Et enfin les aretes restantes */
 ligne(0,5);
 ligne(1,4);
 ligne(2,7);
 ligne(3,6);
}</FONT></PRE>
<FONT SIZE=+1>Voilà pour notre premier programme consistant à
afficher un objet 3D.</FONT>

<P><FONT SIZE=+1>Vous pouvez retrouver les sources et l'exécutable
ms-dos dans <A HREF="cube1.c">cube1.zip</A></FONT>

<P>
<HR WIDTH="100%">

<P><FONT SIZE=+1><A HREF="Plan3D.html">[Sommaire]</A> <A HREF="chap1.html">[Précédent]</A>
<A HREF="chap3.html">[Suivant]</A> <A HREF="../accueil.html" TARGET="Contenu">[Home
Page]</A></FONT>

<P><FONT SIZE=+1>Page réalisée par <A HREF="../cv.html" TARGET="Contenu">Christophe
Heulin.</A></FONT>
<BR><FONT SIZE=+1>Renseignements, critiques, informations : <A HREF="mailto:heulin@multimania.com">heulin@multimania.com</A></FONT>
</BODY>
</HTML>
